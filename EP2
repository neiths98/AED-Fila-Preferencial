#include <stdlib.h>
#include <stdio.h>
#define true 1
#define false 0
#define IDADEPREFERENCIAL 60

typedef int bool;

typedef struct aux {
    int id;
    int idade;
    struct aux* ant;
    struct aux* prox;
} ELEMENTO, * PONT;


typedef struct {
    PONT cabeca;
    PONT inicioNaoPref;
} FILAPREFERENCIAL, * PFILA;

PFILA criarFila(){
    PFILA res = (PFILA) malloc(sizeof(FILAPREFERENCIAL));
    res->cabeca = (PONT) malloc(sizeof(ELEMENTO));
    res->inicioNaoPref = res->cabeca;
    res->cabeca->id = -1;
    res->cabeca->idade = -1;
    res->cabeca->ant = res->cabeca;
    res->cabeca->prox = res->cabeca;
    return res;
}

int tamanho(PFILA f){
    PONT atual = f->cabeca->prox;
    int tam = 0;
    while (atual != f->cabeca) {
        atual = atual->prox;
        tam++;
    }
    return tam;
}

PONT buscarID(PFILA f, int id){
    PONT atual = f->cabeca->prox;
    while (atual != f->cabeca) {
        if (atual->id == id) return atual;
        atual = atual->prox;
    }
    return NULL;
}

void exibirLog(PFILA f){
    int numElementos = tamanho(f);
    printf("                                        Inicio Nao preferencial: id = %d", f->inicioNaoPref->id);//REMOVER DEPOIS
    printf("\nLog fila [elementos: %i]\t- Inicio:", numElementos);
    PONT atual = f->cabeca->prox;
    while (atual != f->cabeca) {
        printf(" [%i;%i]", atual->id, atual->idade);
        atual = atual->prox;
    }
    printf("\n                       \t-    Fim:");
    atual = f->cabeca->ant;
    while (atual != f->cabeca) {
        printf(" [%i;%i]", atual->id, atual->idade);
        atual = atual->ant;
    }
    printf("\n\n");
}


int consultarIdade(PFILA f, int id){
    PONT atual = f->cabeca->prox;
    while (atual != f->cabeca) {
        if (atual->id == id) return atual->idade;
        atual = atual->prox;
    }
    return -1;
}



bool inserirPessoaNaFila(PFILA f, int id, int idade){
    PONT p = f->cabeca;

    // false = id < 0 || idade < 0 || pessoa ja esta na fila
    if(id < 0 || idade < 0 || buscarID(f,id) != NULL)
        return false;

    PONT novo = (PONT) malloc(sizeof(ELEMENTO));
    novo->id = id;
    novo->idade = idade;

    if(tamanho(f) == 0){
        if(idade < IDADEPREFERENCIAL)
            f->inicioNaoPref = novo;
        novo->prox = f->cabeca;
        novo->ant = f->cabeca;
        f->cabeca->prox = novo;
        f->cabeca->ant = novo;
        return true;
    }

    if(idade >= IDADEPREFERENCIAL){ // entra no fim da fila preferencial
        while (p->prox != f->inicioNaoPref){ // caso nao tenha nao preferencial, inicioNaoPref eh cabeca
            p = p->prox;
        }
        novo->prox = f->inicioNaoPref;
        novo->ant = f->inicioNaoPref->ant;
        f->inicioNaoPref->ant = novo;
        p->prox = novo;
        return true;
    } else { // entra sempre no fim da fila
        if(f->inicioNaoPref == f->cabeca)
            f->inicioNaoPref = novo;
        novo->prox = f->cabeca;
        novo->ant = f->cabeca->ant;
        f->cabeca->ant->prox = novo;
        f->cabeca->ant = novo;
        return true;
    }
}




bool atenderPrimeiraDaFila(PFILA f, int* id){




    return false;
}


bool desistirDaFila(PFILA f, int id){



    return false;
}





int main(){

    PONT f = criarFila();
    bool res;

    exibirLog(f);
    res = inserirPessoaNaFila(f, -1, -2);
    if(res) printf("Insercao retornou true (0).\n");
    else printf("Insercao retornou false (0). [OK]\n");
    exibirLog(f);
    res = inserirPessoaNaFila(f, 1, 21);
    if(res) printf("Insercao retornou true (1). [OK]\n");
    else printf("Insercao retornou false (1).\n");
    exibirLog(f);
    res = inserirPessoaNaFila(f, 2, 11);
    if(res) printf("Insercao retornou true (2). [OK]\n");
    else printf("Insercao retornou false (2).\n");
    exibirLog(f);
    res = inserirPessoaNaFila(f, 3, 31);
    if(res) printf("Insercao retornou true (3). [OK]\n");
    else printf("Insercao retornou false (3).\n");
    exibirLog(f);
    res = inserirPessoaNaFila(f, 4, 71);
    if(res) printf("Insercao retornou true (4). [OK]\n");
    else printf("Insercao retornou false (4).\n");
    exibirLog(f);
    res = inserirPessoaNaFila(f, 5, 61);
    if(res) printf("Insercao retornou true (5). [OK]\n");
    else printf("Insercao retornou false (5).\n");
    exibirLog(f);
    res = inserirPessoaNaFila(f, 6, 81);
    if(res) printf("Insercao retornou true (6). [OK]\n");
    else printf("Insercao retornou false (6).\n");
    exibirLog(f);


    return 0;
}








